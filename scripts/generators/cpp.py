# Base generator.
# All other generators inherit from this
#
# @author Daniel J. Finnegan
# @date September 2017

import base
import os
from os import path
import logging
from logging import handlers

class CppGenerator(base.ProjectGenerator):

    # def __init__(self, proj_root):
    #     self.initialize(proj_root)

    # def initialize(self, proj_root):
    #     self.project_root = proj_root
    #     self.logger = logging.getLogger('updater_application')

    def write_sample_source_file(self):
        os.mkdir(os.path.join(self.project_root, 'src'))
        file_contents = (
            '/**\n'
            '\tAutomatically generated by Updater v' + str(self.template_keys['version_number']) + '\n'
            '\t@author ' + self.template_keys['author_name'] + '\n'
            '*/\n'
            '\n'
            '#include <iostream>\n'
            '\n'
            'int main(int argc, char **argv)\n'
            '{\n'
            '\tstd::cout << \"Hello World\" << std::endl;\n'
            '\treturn 0;\n'
            '}\n'
        )

        with open(os.path.join(self.project_root, 'src', 'main.cpp'), 'w') as sample_source:
            sample_source.write(file_contents)

###########################################################