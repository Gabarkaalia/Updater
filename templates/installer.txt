## NSIS Installer template    ##
##                            ##
## Part of Updater            ##
##                            ##
## @author Daniel J. Finnegan ##
## @date October 2017         ##

# Automatically generated by Updater v >>>>>{version_number}
# @author >>>>>{author_name}

!define COMPANY_NAME ">>>>>{company_name}"

!define MAJOR_VERSION 0
!define MINOR_VERSION 8

!define REGUNINSTKEY "${COMPANY_NAME}_${PRODUCT_NAME}"
!define REGHKEY HKLM
!define REGPATH_UNINSTALL "Software\Microsoft\Windows\CurrentVersion\Uninstall"
!define UNINSTALLER_NAME "uninstaller"

Name "Uniment Example"
#ShowInstDetails show # Show the installer details by default

# Installation directory settings
InstallDir "$PROGRAMFILES\${COMPANY_NAME}\${PRODUCT_NAME}"
InstallDirRegKey "${REGHKEY}" "${REGPATH_UNINSTALL}\${REGUNINSTKEY}" "InstallLocation"

# Require admin access
RequestExecutionLevel admin # Require admin rights on NT6+ (When UAC is turned on)

##                     ##
# Modern UI definitions #

!include "MUI2.nsh" # Needed for Modern UI
!include "FileFunc.nsh" # Needed for estimating file size

!define MUI_ICON "${NSISDIR}\Contrib\Graphics\Icons\modern-install.ico"
!insertmacro MUI_PAGE_WELCOME
!insertmacro MUI_PAGE_LICENSE '..\licenses\bsd-3-license.txt'
!insertmacro MUI_PAGE_COMPONENTS
!insertmacro MUI_PAGE_DIRECTORY
#!insertmacro MUI_PAGE_STARTMENU pageid variable
!insertmacro MUI_PAGE_INSTFILES
!insertmacro MUI_PAGE_FINISH

# Uninstaller
!insertmacro MUI_UNPAGE_WELCOME

!define MUI_UNCONFIRMPAGE_TEXT_TOP "Are you sure you wish to uninstall ${PRODUCT_NAME}?"
!insertmacro MUI_UNPAGE_CONFIRM
!insertmacro MUI_UNPAGE_INSTFILES
!insertmacro MUI_UNPAGE_FINISH

##         ##
# Languages #

!insertmacro MUI_LANGUAGE "English"

##         ##
# Functions #

# Mutex check for multiple instances of installer running concurrently
Function .onInit
	System::Call 'kernel32::CreateMutex(i 0, i 0, t "${COMPANY_NAME}:${PRODUCT_NAME}") ?e'
	Pop $R0
	StrCmp $R0 0 +3
		MessageBox MB_OK "The installer is already running."
		Abort
FunctionEnd

##        ##
# Sections #

# Install the example application
Section /o "Install Uniment Example" uniment_install
	SetOutPath "$INSTDIR"
	WriteUninstaller $INSTDIR\${UNINSTALLER_NAME}.exe
	DetailPrint "Installting the application..."
	File /r "..\build\*.*"

	# Write registry keys for uninstallation and Add/Remove Control Panel access
	WriteRegStr ${REGHKEY} "${REGPATH_UNINSTALL}\${REGUNINSTKEY}" \
	"DisplayName" "${PRODUCT_NAME} -- Uniment Framework Demo"
	WriteRegStr ${REGHKEY} "${REGPATH_UNINSTALL}\${REGUNINSTKEY}" \
	"InstallLocation" "$\"$INSTDIR$\""
	WriteRegStr ${REGHKEY} "${REGPATH_UNINSTALL}\${REGUNINSTKEY}" \
	"UninstallString" "$\"$INSTDIR\${UNINSTALLER_NAME}.exe$\""
	WriteRegStr ${REGHKEY} "${REGPATH_UNINSTALL}\${REGUNINSTKEY}" \
	"Publisher" "${COMPANY_NAME}"

	# Write the estimated size
	${GetSize} "$INSTDIR" "/S=0K" $0 $1 $2
	IntFmt $0 "0x%08X" $0
	WriteRegDWORD ${REGHKEY} "${REGPATH_UNINSTALL}\${REGUNINSTKEY}" \
	"EstimatedSize" "$0"
SectionEnd

Section "Uninstall"
	Delete "$INSTDIR\${UNINSTALLER_NAME}.exe" # works because uninstaller is copied to system temp folder
	Delete "$INSTDIR\${PRODUCT_NAME}.exe"
	RMDir /r "$INSTDIR\${PRODUCT_NAME}_Data"
	RMDir $INSTDIR
	DeleteRegKey ${REGHKEY} "${REGPATH_UNINSTALL}\${REGUNINSTKEY}"
SectionEnd

##                                 ##
# Set descriptions for each section #

LangString DESC_uniment_install ${LANG_ENGLISH} "Installs the example application. Geomagic Pen is supported, but this example just shows the experimental framework. Its not a Geomagic Haptic Demo."

!insertmacro MUI_FUNCTION_DESCRIPTION_BEGIN
  !insertmacro MUI_DESCRIPTION_TEXT ${uniment_install} $(DESC_uniment_install)
!insertmacro MUI_FUNCTION_DESCRIPTION_END
####################################################
